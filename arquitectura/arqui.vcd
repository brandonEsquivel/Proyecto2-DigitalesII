$date
	Wed Jul 10 12:01:16 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module BUF $end
$var wire 1 ! A $end
$var wire 1 " Y $end
$upscope $end
$scope module DFF $end
$var wire 1 # C $end
$var wire 1 $ D $end
$var reg 1 % Q $end
$upscope $end
$scope module DFFSR $end
$var wire 1 & C $end
$var wire 1 ' D $end
$var wire 1 ( R $end
$var wire 1 ) S $end
$var reg 1 * Q $end
$upscope $end
$scope module NAND $end
$var wire 1 + A $end
$var wire 1 , B $end
$var wire 1 - Y $end
$upscope $end
$scope module NOR $end
$var wire 1 . A $end
$var wire 1 / B $end
$var wire 1 0 Y $end
$upscope $end
$scope module NOT $end
$var wire 1 1 A $end
$var wire 1 2 Y $end
$upscope $end
$scope module bancoEV $end
$var wire 1 3 reset_L $end
$var wire 1 4 push_main $end
$var wire 1 5 pop_d1 $end
$var wire 1 6 pop_d0 $end
$var wire 1 7 init $end
$var wire 1 8 idle_out_cond $end
$var wire 1 9 fifo_pause_main $end
$var wire 1 : fifo_empty_d1 $end
$var wire 1 ; fifo_empty_d0 $end
$var wire 5 < error_out_cond [4:0] $end
$var wire 6 = data_out_1_cond [5:0] $end
$var wire 6 > data_out_0_cond [5:0] $end
$var wire 6 ? data_in [5:0] $end
$var wire 1 @ clk $end
$var wire 4 A afVC_i [3:0] $end
$var wire 2 B afMF_i [1:0] $end
$var wire 2 C afDF_i [1:0] $end
$var wire 4 D aeVC_i [3:0] $end
$var wire 2 E aeMF_i [1:0] $end
$var wire 2 F aeDF_i [1:0] $end
$var wire 1 G active_out_cond $end
$scope module cond $end
$var wire 1 H pop_delay_vc0 $end
$var wire 1 I pop_delay_vc1 $end
$var wire 1 J valid_out_main $end
$var wire 1 3 reset_L $end
$var wire 1 K push_vc1 $end
$var wire 1 L push_vc0 $end
$var wire 1 4 push_main $end
$var wire 1 M push_d1 $end
$var wire 1 N push_d0 $end
$var wire 1 O pop_vc1 $end
$var wire 1 P pop_vc0 $end
$var wire 1 Q pop_main $end
$var wire 1 5 pop_d1 $end
$var wire 1 6 pop_d0 $end
$var wire 1 R pop_b1 $end
$var wire 1 S pop_b0 $end
$var wire 1 T pop_b $end
$var wire 1 7 init $end
$var wire 1 8 idle_out_cond $end
$var wire 1 U fifo_pause_vc1 $end
$var wire 1 V fifo_pause_vc0 $end
$var wire 1 9 fifo_pause_main $end
$var wire 1 W fifo_pause_d1 $end
$var wire 1 X fifo_pause_d0 $end
$var wire 1 Y fifo_error_vc1 $end
$var wire 1 Z fifo_error_vc0 $end
$var wire 1 [ fifo_error_main $end
$var wire 1 \ fifo_error_d1 $end
$var wire 1 ] fifo_error_d0 $end
$var wire 1 ^ fifo_empty_vc1 $end
$var wire 1 _ fifo_empty_vc0 $end
$var wire 1 ` fifo_empty_main $end
$var wire 1 : fifo_empty_d1 $end
$var wire 1 ; fifo_empty_d0 $end
$var wire 5 a error_out_cond [4:0] $end
$var wire 6 b data_vc1 [5:0] $end
$var wire 6 c data_vc0 [5:0] $end
$var wire 6 d data_out_1_cond [5:0] $end
$var wire 6 e data_out_0_cond [5:0] $end
$var wire 6 f data_mux_1 [5:0] $end
$var wire 6 g data_mux_0 [5:0] $end
$var wire 6 h data_in [5:0] $end
$var wire 6 i data_demux_vc [5:0] $end
$var wire 6 j data_demux_d [5:0] $end
$var wire 6 k data_d1 [5:0] $end
$var wire 6 l data_d0 [5:0] $end
$var wire 1 @ clk $end
$var wire 4 m afVC_o [3:0] $end
$var wire 4 n afVC_i [3:0] $end
$var wire 2 o afMF_o [1:0] $end
$var wire 2 p afMF_i [1:0] $end
$var wire 2 q afD_o [1:0] $end
$var wire 2 r afDF_i [1:0] $end
$var wire 4 s aeVC_o [3:0] $end
$var wire 4 t aeVC_i [3:0] $end
$var wire 2 u aeMF_o [1:0] $end
$var wire 2 v aeMF_i [1:0] $end
$var wire 2 w aeD_o [1:0] $end
$var wire 2 x aeDF_i [1:0] $end
$var wire 1 G active_out_cond $end
$var reg 5 y FIFO_empties [4:0] $end
$var reg 5 z FIFO_errors [4:0] $end
$scope module d0 $end
$var wire 1 3 reset_L $end
$var wire 1 N push_d0 $end
$var wire 1 6 pop_d0 $end
$var wire 6 { data_out [5:0] $end
$var wire 6 | data_d0 [5:0] $end
$var wire 1 @ clk $end
$var wire 2 } afD_o [1:0] $end
$var wire 2 ~ aeD_o [1:0] $end
$var reg 1 !" almost_empty $end
$var reg 1 "" almost_full $end
$var reg 6 #" data_count [5:0] $end
$var reg 6 $" data_out_0_cond [5:0] $end
$var reg 1 %" datamod $end
$var reg 1 ; fifo_empty_d0 $end
$var reg 1 ] fifo_error_d0 $end
$var reg 1 &" fifo_full $end
$var reg 1 X fifo_pause_d0 $end
$var reg 2 '" rd_ptr [1:0] $end
$var reg 2 (" wr_ptr [1:0] $end
$scope module mem_d0 $end
$var wire 2 )" rd_ptr [1:0] $end
$var wire 2 *" wr_ptr [1:0] $end
$var wire 1 N write $end
$var wire 1 3 reset_L $end
$var wire 1 6 read $end
$var wire 6 +" data_in [5:0] $end
$var wire 1 @ clk $end
$var reg 6 ," data_out [5:0] $end
$upscope $end
$upscope $end
$scope module d1 $end
$var wire 1 3 reset_L $end
$var wire 1 M push_d1 $end
$var wire 1 5 pop_d1 $end
$var wire 6 -" data_out [5:0] $end
$var wire 6 ." data_d1 [5:0] $end
$var wire 1 @ clk $end
$var wire 2 /" afD_o [1:0] $end
$var wire 2 0" aeD_o [1:0] $end
$var reg 1 1" almost_empty $end
$var reg 1 2" almost_full $end
$var reg 6 3" data_count [5:0] $end
$var reg 6 4" data_out_1_cond [5:0] $end
$var reg 1 5" datamod $end
$var reg 1 : fifo_empty_d1 $end
$var reg 1 \ fifo_error_d1 $end
$var reg 1 6" fifo_full $end
$var reg 1 W fifo_pause_d1 $end
$var reg 2 7" rd_ptr [1:0] $end
$var reg 2 8" wr_ptr [1:0] $end
$scope module mem_d1 $end
$var wire 2 9" rd_ptr [1:0] $end
$var wire 2 :" wr_ptr [1:0] $end
$var wire 1 M write $end
$var wire 1 3 reset_L $end
$var wire 1 5 read $end
$var wire 6 ;" data_in [5:0] $end
$var wire 1 @ clk $end
$var reg 6 <" data_out [5:0] $end
$upscope $end
$upscope $end
$scope module demux_d $end
$var wire 6 =" data_demux_d [5:0] $end
$var wire 1 @ clk $end
$var reg 6 >" data_d0 [5:0] $end
$var reg 6 ?" data_d1 [5:0] $end
$var reg 1 N push_d0 $end
$var reg 1 M push_d1 $end
$var reg 1 @" selector $end
$upscope $end
$scope module demux_main $end
$var wire 1 J valid_out_main $end
$var wire 6 A" data_demux_vc [5:0] $end
$var wire 1 @ clk $end
$var reg 6 B" data_vc0 [5:0] $end
$var reg 6 C" data_vc1 [5:0] $end
$var reg 1 L push_vc0 $end
$var reg 1 K push_vc1 $end
$var reg 1 D" selector $end
$upscope $end
$scope module fsm0 $end
$var wire 5 E" FIFO_empties [4:0] $end
$var wire 5 F" FIFO_errors [4:0] $end
$var wire 1 3 reset_L $end
$var wire 1 7 init $end
$var wire 1 @ clk $end
$var wire 4 G" afVC_i [3:0] $end
$var wire 2 H" afMF_i [1:0] $end
$var wire 2 I" afDF_i [1:0] $end
$var wire 4 J" aeVC_i [3:0] $end
$var wire 2 K" aeMF_i [1:0] $end
$var wire 2 L" aeDF_i [1:0] $end
$var reg 1 G active_out_cond $end
$var reg 2 M" aeD_o [1:0] $end
$var reg 2 N" aeMF_o [1:0] $end
$var reg 4 O" aeVC_o [3:0] $end
$var reg 2 P" afD_o [1:0] $end
$var reg 2 Q" afMF_o [1:0] $end
$var reg 4 R" afVC_o [3:0] $end
$var reg 5 S" error_ant [4:0] $end
$var reg 5 T" error_out_cond [4:0] $end
$var reg 5 U" estado [4:0] $end
$var reg 5 V" estado_proximo [4:0] $end
$var reg 1 8 idle_out_cond $end
$upscope $end
$scope module in_flow $end
$var wire 1 3 reset_L $end
$var wire 1 U fifo_pause_vc1 $end
$var wire 1 V fifo_pause_vc0 $end
$var wire 1 ` fifo_empty_main $end
$var reg 1 T pop_b $end
$var reg 1 Q pop_main $end
$upscope $end
$scope module main $end
$var wire 2 W" aeMF_o [1:0] $end
$var wire 2 X" afMF_o [1:0] $end
$var wire 1 Q pop_main $end
$var wire 1 3 reset_L $end
$var wire 1 4 push_main $end
$var wire 6 Y" data_out [5:0] $end
$var wire 6 Z" data_in [5:0] $end
$var wire 1 @ clk $end
$var reg 1 [" almost_empty $end
$var reg 1 \" almost_full $end
$var reg 6 ]" data_count [5:0] $end
$var reg 6 ^" data_demux_vc [5:0] $end
$var reg 1 _" datamod $end
$var reg 1 ` fifo_empty_main $end
$var reg 1 [ fifo_error_main $end
$var reg 1 `" fifo_full $end
$var reg 1 9 fifo_pause_main $end
$var reg 2 a" rd_ptr [1:0] $end
$var reg 2 b" wr_ptr [1:0] $end
$scope module main_mem $end
$var wire 2 c" rd_ptr [1:0] $end
$var wire 1 Q read $end
$var wire 2 d" wr_ptr [1:0] $end
$var wire 1 4 write $end
$var wire 1 3 reset_L $end
$var wire 6 e" data_in [5:0] $end
$var wire 1 @ clk $end
$var reg 6 f" data_out [5:0] $end
$upscope $end
$upscope $end
$scope module mux0 $end
$var wire 1 H pop_delay_vc0 $end
$var wire 1 I pop_delay_vc1 $end
$var wire 6 g" data_mux_1 [5:0] $end
$var wire 6 h" data_mux_0 [5:0] $end
$var wire 1 @ clk $end
$var reg 6 i" data_demux_d [5:0] $end
$var reg 6 j" reg_VC0 [5:0] $end
$var reg 6 k" reg_VC1 [5:0] $end
$upscope $end
$scope module of $end
$var wire 1 X fifo_pause_d0 $end
$var wire 1 W fifo_pause_d1 $end
$var wire 1 ^ fifo_empty_vc1 $end
$var wire 1 _ fifo_empty_vc0 $end
$var reg 1 S pop_b0 $end
$var reg 1 R pop_b1 $end
$var reg 1 P pop_vc0 $end
$var reg 1 O pop_vc1 $end
$upscope $end
$scope module vc0 $end
$var wire 4 l" aeVC_o [3:0] $end
$var wire 4 m" afVC_o [3:0] $end
$var wire 6 n" data_vc0 [5:0] $end
$var wire 1 P pop_vc0 $end
$var wire 1 L push_vc0 $end
$var wire 1 3 reset_L $end
$var wire 6 o" data_out [5:0] $end
$var wire 1 @ clk $end
$var reg 1 p" almost_empty $end
$var reg 1 q" almost_full $end
$var reg 6 r" data_count [5:0] $end
$var reg 6 s" data_mux_0 [5:0] $end
$var reg 1 t" datamod $end
$var reg 1 _ fifo_empty_vc0 $end
$var reg 1 Z fifo_error_vc0 $end
$var reg 1 u" fifo_full $end
$var reg 1 V fifo_pause_vc0 $end
$var reg 4 v" rd_ptr [3:0] $end
$var reg 4 w" wr_ptr [3:0] $end
$scope module mem_vc0 $end
$var wire 6 x" data_in [5:0] $end
$var wire 4 y" rd_ptr [3:0] $end
$var wire 1 P read $end
$var wire 4 z" wr_ptr [3:0] $end
$var wire 1 L write $end
$var wire 1 3 reset_L $end
$var wire 1 @ clk $end
$var reg 6 {" data_out [5:0] $end
$upscope $end
$upscope $end
$scope module vc1 $end
$var wire 4 |" aeVC_o [3:0] $end
$var wire 4 }" afVC_o [3:0] $end
$var wire 6 ~" data_vc1 [5:0] $end
$var wire 1 O pop_vc1 $end
$var wire 1 K push_vc1 $end
$var wire 1 3 reset_L $end
$var wire 6 !# data_out [5:0] $end
$var wire 1 @ clk $end
$var reg 1 "# almost_empty $end
$var reg 1 ## almost_full $end
$var reg 6 $# data_count [5:0] $end
$var reg 6 %# data_mux_1 [5:0] $end
$var reg 1 &# datamod $end
$var reg 1 ^ fifo_empty_vc1 $end
$var reg 1 Y fifo_error_vc1 $end
$var reg 1 '# fifo_full $end
$var reg 1 U fifo_pause_vc1 $end
$var reg 4 (# rd_ptr [3:0] $end
$var reg 4 )# wr_ptr [3:0] $end
$scope module mem_vc1 $end
$var wire 6 *# data_in [5:0] $end
$var wire 4 +# rd_ptr [3:0] $end
$var wire 1 O read $end
$var wire 4 ,# wr_ptr [3:0] $end
$var wire 1 K write $end
$var wire 1 3 reset_L $end
$var wire 1 @ clk $end
$var reg 6 -# data_out [5:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module probador $end
$var wire 1 G active_out_cond $end
$var wire 6 .# data_out_0_cond [5:0] $end
$var wire 6 /# data_out_1_cond [5:0] $end
$var wire 5 0# error_out_cond [4:0] $end
$var wire 1 ; fifo_empty_d0 $end
$var wire 1 : fifo_empty_d1 $end
$var wire 1 9 fifo_pause_main $end
$var wire 1 8 idle_out_cond $end
$var reg 2 1# aeDF_i [1:0] $end
$var reg 2 2# aeMF_i [1:0] $end
$var reg 4 3# aeVC_i [3:0] $end
$var reg 2 4# afDF_i [1:0] $end
$var reg 2 5# afMF_i [1:0] $end
$var reg 4 6# afVC_i [3:0] $end
$var reg 1 @ clk $end
$var reg 6 7# data_in [5:0] $end
$var reg 1 7 init $end
$var reg 1 6 pop_d0 $end
$var reg 1 5 pop_d1 $end
$var reg 1 4 push_main $end
$var reg 1 3 reset_L $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b101100 7#
b1110 6#
b11 5#
b11 4#
b10 3#
b1 2#
b1 1#
b0 0#
bx /#
bx .#
bx -#
bx ,#
bx +#
b0 *#
bx )#
bx (#
0'#
0&#
bx %#
bx $#
0##
0"#
bx !#
b0 ~"
bx }"
bx |"
bx {"
bx z"
bx y"
b0 x"
bx w"
bx v"
0u"
0t"
bx s"
bx r"
0q"
0p"
bx o"
b0 n"
bx m"
bx l"
b0 k"
b0 j"
bx i"
bx h"
bx g"
bx f"
b101100 e"
bx d"
bx c"
bx b"
bx a"
0`"
0_"
bx ^"
bx ]"
0\"
0["
b101100 Z"
bx Y"
bx X"
bx W"
b1 V"
bx U"
b0 T"
bx S"
bx R"
bx Q"
bx P"
bx O"
bx N"
bx M"
b1 L"
b1 K"
b10 J"
b11 I"
b11 H"
b1110 G"
b0 F"
b0 E"
xD"
b0 C"
b0 B"
bx A"
x@"
bx ?"
bx >"
bx ="
bx <"
bx ;"
bx :"
bx 9"
bx 8"
bx 7"
06"
05"
bx 4"
bx 3"
02"
01"
bx 0"
bx /"
bx ."
bx -"
bx ,"
bx +"
bx *"
bx )"
bx ("
bx '"
0&"
0%"
bx $"
bx #"
0""
0!"
bx ~
bx }
bx |
bx {
b0 z
b0 y
b1 x
bx w
b1 v
bx u
b10 t
bx s
b11 r
bx q
b11 p
bx o
b1110 n
bx m
bx l
bx k
bx j
bx i
b101100 h
bx g
bx f
bx e
bx d
b0 c
b0 b
b0 a
1`
1_
1^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
xN
xM
0L
0K
zJ
zI
zH
0G
b1 F
b1 E
b10 D
b11 C
b11 B
b1110 A
0@
b101100 ?
bx >
bx =
b0 <
1;
1:
09
08
07
06
05
04
03
z2
z1
x0
z/
z.
x-
z,
z+
x*
z)
z(
z'
z&
x%
z$
z#
z"
z!
$end
#2000
b10 V"
0D"
b0 k"
0@"
0M
1N
b0 k
b0 ."
b0 ;"
b0 ?"
b0 l
b0 |
b0 +"
b0 >"
1X
1""
1;
b11111 y
b11111 E"
1W
12"
1:
19
1\"
1`
1V
1q"
1_
1U
1##
1^
b0 S"
b0 w
b0 ~
b0 0"
b0 M"
b0 q
b0 }
b0 /"
b0 P"
b0 s
b0 O"
b0 l"
b0 |"
b0 m
b0 R"
b0 m"
b0 }"
b0 u
b0 N"
b0 W"
b0 o
b0 Q"
b0 X"
b1 U"
b0 a"
b0 c"
b0 b"
b0 d"
b0 i
b0 A"
b0 ^"
b0 ]"
b0 v"
b0 y"
b0 w"
b0 z"
b0 g
b0 h"
b0 s"
b0 r"
b0 (#
b0 +#
b0 )#
b0 ,#
b0 f
b0 g"
b0 %#
b0 $#
b0 j
b0 ="
b0 i"
b0 '"
b0 )"
b0 ("
b0 *"
b0 >
b0 e
b0 $"
b0 .#
b0 #"
b0 7"
b0 9"
b0 8"
b0 :"
b0 =
b0 d
b0 4"
b0 /#
b0 3"
13
1@
#4000
0@
#6000
b10111 y
b10111 E"
1X
1""
0;
b0 {
b0 ,"
b100 V"
b1 #"
b1 ("
b1 *"
b10 U"
1@
#8000
0@
#10000
b10111 y
b10111 E"
0W
02"
1:
0V
0q"
1_
0U
0##
1^
09
0\"
1`
18
b1000 V"
0X
0""
b1 w
b1 ~
b1 0"
b1 M"
b11 q
b11 }
b11 /"
b11 P"
b10 s
b10 O"
b10 l"
b10 |"
b1110 m
b1110 R"
b1110 m"
b1110 }"
b1 u
b1 N"
b1 W"
b11 o
b11 Q"
b11 X"
b100 U"
b10 #"
b10 ("
b10 *"
1@
#12000
0@
#14000
b10111 y
b10111 E"
1`
1X
1""
1G
b1000 V"
08
14
b101101 ?
b101101 h
b101101 Z"
b101101 e"
b101101 7#
b11 #"
b11 ("
b11 *"
b1000 U"
1@
#16000
0@
#18000
b1000 <
b1000 a
b1000 T"
b1000 0#
b1000 S"
b10000 V"
0G
1T
1Q
b1000 z
b1000 F"
b10110 y
b10110 E"
b101101 Y"
b101101 f"
1["
0`
1]
1&"
1X
1""
b1 ]"
b1 b"
b1 d"
b100 #"
b0 ("
b0 *"
b101110 ?
b101110 h
b101110 Z"
b101110 e"
b101110 7#
1@
#20000
0@
#22000
b101110 Y"
b101110 f"
b10000 V"
b1000 <
b1000 a
b1000 T"
b1000 0#
b1 a"
b1 c"
b10 b"
b10 d"
b10000 U"
1@
#24000
0@
#26000
b10 a"
b10 c"
b11 b"
b11 d"
1@
#28000
0@
#30000
b11 a"
b11 c"
b0 b"
b0 d"
1@
#32000
0@
#34000
b0 a"
b0 c"
b1 b"
b1 d"
1@
#36000
0@
#38000
b1 a"
b1 c"
b10 b"
b10 d"
1@
#40000
0@
#42000
b10 a"
b10 c"
b11 b"
b11 d"
1@
#44000
0@
#46000
b11 a"
b11 c"
b0 b"
b0 d"
1@
#48000
0@
#50000
b0 a"
b0 c"
b1 b"
b1 d"
1@
#52000
0@
#54000
b1 a"
b1 c"
b10 b"
b10 d"
1@
#56000
0@
#58000
b10 a"
b10 c"
b11 b"
b11 d"
1@
#60000
0@
#62000
b11 a"
b11 c"
b0 b"
b0 d"
1@
#64000
0@
#66000
b0 a"
b0 c"
b1 b"
b1 d"
1@
#68000
0@
#70000
b1 a"
b1 c"
b10 b"
b10 d"
1@
#72000
0@
#74000
b10 a"
b10 c"
b11 b"
b11 d"
1@
#76000
0@
#78000
b11 a"
b11 c"
b0 b"
b0 d"
1@
#80000
0@
#82000
b0 a"
b0 c"
b1 b"
b1 d"
1@
#84000
0@
#86000
b1100 ?
b1100 h
b1100 Z"
b1100 e"
b1100 7#
b1 a"
b1 c"
b10 b"
b10 d"
1@
#88000
0@
#90000
b1100 Y"
b1100 f"
b10 a"
b10 c"
b11 b"
b11 d"
1@
#92000
0@
#94000
b11 a"
b11 c"
b0 b"
b0 d"
1@
#96000
0@
#98000
b0 a"
b0 c"
b1 b"
b1 d"
1@
#100000
0@
#102000
b1 a"
b1 c"
b10 b"
b10 d"
1@
#104000
0@
#106000
b10 a"
b10 c"
b11 b"
b11 d"
1@
#108000
0@
#110000
b11 a"
b11 c"
b0 b"
b0 d"
1@
#112000
0@
#114000
b0 a"
b0 c"
b1 b"
b1 d"
1@
#116000
0@
#118000
b1 a"
b1 c"
b10 b"
b10 d"
1@
#120000
0@
#122000
b10 a"
b10 c"
b11 b"
b11 d"
1@
#124000
0@
#126000
b11 a"
b11 c"
b0 b"
b0 d"
1@
#128000
0@
#130000
b0 a"
b0 c"
b1 b"
b1 d"
1@
#132000
0@
#134000
b1 a"
b1 c"
b10 b"
b10 d"
1@
#136000
0@
#138000
b10 a"
b10 c"
b11 b"
b11 d"
1@
#140000
0@
#142000
b11 a"
b11 c"
b0 b"
b0 d"
1@
#144000
0@
#146000
b0 a"
b0 c"
b1 b"
b1 d"
1@
#148000
0@
#150000
b1 a"
b1 c"
b10 b"
b10 d"
1@
#152000
0@
#154000
b10 a"
b10 c"
b11 b"
b11 d"
1@
#156000
0@
#158000
b11 a"
b11 c"
b0 b"
b0 d"
1@
