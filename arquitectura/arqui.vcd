$date
	Wed Jul 10 13:07:57 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module BUF $end
$var wire 1 ! A $end
$var wire 1 " Y $end
$upscope $end
$scope module DFF $end
$var wire 1 # C $end
$var wire 1 $ D $end
$var reg 1 % Q $end
$upscope $end
$scope module DFFSR $end
$var wire 1 & C $end
$var wire 1 ' D $end
$var wire 1 ( R $end
$var wire 1 ) S $end
$var reg 1 * Q $end
$upscope $end
$scope module NAND $end
$var wire 1 + A $end
$var wire 1 , B $end
$var wire 1 - Y $end
$upscope $end
$scope module NOR $end
$var wire 1 . A $end
$var wire 1 / B $end
$var wire 1 0 Y $end
$upscope $end
$scope module NOT $end
$var wire 1 1 A $end
$var wire 1 2 Y $end
$upscope $end
$scope module bancoEV $end
$var wire 1 3 reset_L $end
$var wire 1 4 push_main $end
$var wire 1 5 pop_d1 $end
$var wire 1 6 pop_d0 $end
$var wire 1 7 init $end
$var wire 1 8 idle_out_cond $end
$var wire 1 9 fifo_pause_main $end
$var wire 1 : fifo_empty_d1 $end
$var wire 1 ; fifo_empty_d0 $end
$var wire 5 < error_out_cond [4:0] $end
$var wire 6 = data_out_1_cond [5:0] $end
$var wire 6 > data_out_0_cond [5:0] $end
$var wire 6 ? data_in [5:0] $end
$var wire 1 @ clk $end
$var wire 4 A afVC_i [3:0] $end
$var wire 2 B afMF_i [1:0] $end
$var wire 2 C afDF_i [1:0] $end
$var wire 4 D aeVC_i [3:0] $end
$var wire 2 E aeMF_i [1:0] $end
$var wire 2 F aeDF_i [1:0] $end
$var wire 1 G active_out_cond $end
$scope module cond $end
$var wire 1 H pop_delay_vc0 $end
$var wire 1 I pop_delay_vc1 $end
$var wire 1 J valid_out_main $end
$var wire 1 3 reset_L $end
$var wire 1 K push_vc1 $end
$var wire 1 L push_vc0 $end
$var wire 1 4 push_main $end
$var wire 1 M push_d1 $end
$var wire 1 N push_d0 $end
$var wire 1 O pop_vc1 $end
$var wire 1 P pop_vc0 $end
$var wire 1 Q pop_main $end
$var wire 1 5 pop_d1 $end
$var wire 1 6 pop_d0 $end
$var wire 1 R pop_b1 $end
$var wire 1 S pop_b0 $end
$var wire 1 T pop_b $end
$var wire 1 7 init $end
$var wire 1 8 idle_out_cond $end
$var wire 1 U fifo_pause_vc1 $end
$var wire 1 V fifo_pause_vc0 $end
$var wire 1 9 fifo_pause_main $end
$var wire 1 W fifo_pause_d1 $end
$var wire 1 X fifo_pause_d0 $end
$var wire 1 Y fifo_error_vc1 $end
$var wire 1 Z fifo_error_vc0 $end
$var wire 1 [ fifo_error_main $end
$var wire 1 \ fifo_error_d1 $end
$var wire 1 ] fifo_error_d0 $end
$var wire 1 ^ fifo_empty_vc1 $end
$var wire 1 _ fifo_empty_vc0 $end
$var wire 1 ` fifo_empty_main $end
$var wire 1 : fifo_empty_d1 $end
$var wire 1 ; fifo_empty_d0 $end
$var wire 5 a error_out_cond [4:0] $end
$var wire 6 b data_vc1 [5:0] $end
$var wire 6 c data_vc0 [5:0] $end
$var wire 6 d data_out_1_cond [5:0] $end
$var wire 6 e data_out_0_cond [5:0] $end
$var wire 6 f data_mux_1 [5:0] $end
$var wire 6 g data_mux_0 [5:0] $end
$var wire 6 h data_in [5:0] $end
$var wire 6 i data_demux_vc [5:0] $end
$var wire 6 j data_demux_d [5:0] $end
$var wire 6 k data_d1 [5:0] $end
$var wire 6 l data_d0 [5:0] $end
$var wire 1 @ clk $end
$var wire 4 m afVC_o [3:0] $end
$var wire 4 n afVC_i [3:0] $end
$var wire 2 o afMF_o [1:0] $end
$var wire 2 p afMF_i [1:0] $end
$var wire 2 q afD_o [1:0] $end
$var wire 2 r afDF_i [1:0] $end
$var wire 4 s aeVC_o [3:0] $end
$var wire 4 t aeVC_i [3:0] $end
$var wire 2 u aeMF_o [1:0] $end
$var wire 2 v aeMF_i [1:0] $end
$var wire 2 w aeD_o [1:0] $end
$var wire 2 x aeDF_i [1:0] $end
$var wire 1 G active_out_cond $end
$var reg 5 y FIFO_empties [4:0] $end
$var reg 5 z FIFO_errors [4:0] $end
$scope module d0 $end
$var wire 1 3 reset_L $end
$var wire 1 N push_d0 $end
$var wire 1 6 pop_d0 $end
$var wire 6 { data_out [5:0] $end
$var wire 6 | data_d0 [5:0] $end
$var wire 1 @ clk $end
$var wire 2 } afD_o [1:0] $end
$var wire 2 ~ aeD_o [1:0] $end
$var reg 1 !" almost_empty $end
$var reg 1 "" almost_full $end
$var reg 6 #" data_count [5:0] $end
$var reg 6 $" data_out_0_cond [5:0] $end
$var reg 1 %" datamod $end
$var reg 1 ; fifo_empty_d0 $end
$var reg 1 ] fifo_error_d0 $end
$var reg 1 &" fifo_full $end
$var reg 1 X fifo_pause_d0 $end
$var reg 2 '" rd_ptr [1:0] $end
$var reg 2 (" wr_ptr [1:0] $end
$scope module mem_d0 $end
$var wire 2 )" rd_ptr [1:0] $end
$var wire 2 *" wr_ptr [1:0] $end
$var wire 1 N write $end
$var wire 1 3 reset_L $end
$var wire 1 6 read $end
$var wire 6 +" data_in [5:0] $end
$var wire 1 @ clk $end
$var reg 6 ," data_out [5:0] $end
$upscope $end
$upscope $end
$scope module d1 $end
$var wire 1 3 reset_L $end
$var wire 1 M push_d1 $end
$var wire 1 5 pop_d1 $end
$var wire 6 -" data_out [5:0] $end
$var wire 6 ." data_d1 [5:0] $end
$var wire 1 @ clk $end
$var wire 2 /" afD_o [1:0] $end
$var wire 2 0" aeD_o [1:0] $end
$var reg 1 1" almost_empty $end
$var reg 1 2" almost_full $end
$var reg 6 3" data_count [5:0] $end
$var reg 6 4" data_out_1_cond [5:0] $end
$var reg 1 5" datamod $end
$var reg 1 : fifo_empty_d1 $end
$var reg 1 \ fifo_error_d1 $end
$var reg 1 6" fifo_full $end
$var reg 1 W fifo_pause_d1 $end
$var reg 2 7" rd_ptr [1:0] $end
$var reg 2 8" wr_ptr [1:0] $end
$scope module mem_d1 $end
$var wire 2 9" rd_ptr [1:0] $end
$var wire 2 :" wr_ptr [1:0] $end
$var wire 1 M write $end
$var wire 1 3 reset_L $end
$var wire 1 5 read $end
$var wire 6 ;" data_in [5:0] $end
$var wire 1 @ clk $end
$var reg 6 <" data_out [5:0] $end
$upscope $end
$upscope $end
$scope module demux_d $end
$var wire 6 =" data_demux_d [5:0] $end
$var wire 1 @ clk $end
$var reg 6 >" data_d0 [5:0] $end
$var reg 6 ?" data_d1 [5:0] $end
$var reg 1 N push_d0 $end
$var reg 1 M push_d1 $end
$var reg 1 @" selector $end
$upscope $end
$scope module demux_main $end
$var wire 1 J valid_out_main $end
$var wire 6 A" data_demux_vc [5:0] $end
$var wire 1 @ clk $end
$var reg 6 B" data_vc0 [5:0] $end
$var reg 6 C" data_vc1 [5:0] $end
$var reg 1 L push_vc0 $end
$var reg 1 K push_vc1 $end
$var reg 1 D" selector $end
$upscope $end
$scope module fsm0 $end
$var wire 5 E" FIFO_empties [4:0] $end
$var wire 5 F" FIFO_errors [4:0] $end
$var wire 1 3 reset_L $end
$var wire 1 7 init $end
$var wire 1 @ clk $end
$var wire 4 G" afVC_i [3:0] $end
$var wire 2 H" afMF_i [1:0] $end
$var wire 2 I" afDF_i [1:0] $end
$var wire 4 J" aeVC_i [3:0] $end
$var wire 2 K" aeMF_i [1:0] $end
$var wire 2 L" aeDF_i [1:0] $end
$var reg 1 G active_out_cond $end
$var reg 2 M" aeD_o [1:0] $end
$var reg 2 N" aeMF_o [1:0] $end
$var reg 4 O" aeVC_o [3:0] $end
$var reg 2 P" afD_o [1:0] $end
$var reg 2 Q" afMF_o [1:0] $end
$var reg 4 R" afVC_o [3:0] $end
$var reg 5 S" error_ant [4:0] $end
$var reg 5 T" error_out_cond [4:0] $end
$var reg 5 U" estado [4:0] $end
$var reg 5 V" estado_proximo [4:0] $end
$var reg 1 8 idle_out_cond $end
$upscope $end
$scope module in_flow $end
$var wire 1 3 reset_L $end
$var wire 1 U fifo_pause_vc1 $end
$var wire 1 V fifo_pause_vc0 $end
$var wire 1 [ fifo_error_main $end
$var wire 1 ` fifo_empty_main $end
$var reg 1 T pop_b $end
$var reg 1 Q pop_main $end
$var reg 1 J valid_out_main $end
$upscope $end
$scope module main $end
$var wire 2 W" aeMF_o [1:0] $end
$var wire 2 X" afMF_o [1:0] $end
$var wire 1 Q pop_main $end
$var wire 1 3 reset_L $end
$var wire 1 4 push_main $end
$var wire 6 Y" data_in [5:0] $end
$var wire 6 Z" data_demux_vc [5:0] $end
$var wire 1 @ clk $end
$var reg 1 [" almost_empty $end
$var reg 1 \" almost_full $end
$var reg 6 ]" data_count [5:0] $end
$var reg 1 ^" datamod $end
$var reg 1 ` fifo_empty_main $end
$var reg 1 [ fifo_error_main $end
$var reg 1 _" fifo_full $end
$var reg 1 9 fifo_pause_main $end
$var reg 2 `" rd_ptr [1:0] $end
$var reg 2 a" wr_ptr [1:0] $end
$scope module main_mem $end
$var wire 2 b" rd_ptr [1:0] $end
$var wire 1 Q read $end
$var wire 2 c" wr_ptr [1:0] $end
$var wire 1 4 write $end
$var wire 1 3 reset_L $end
$var wire 6 d" data_in [5:0] $end
$var wire 1 @ clk $end
$var reg 6 e" data_out [5:0] $end
$upscope $end
$upscope $end
$scope module mux0 $end
$var wire 1 H pop_delay_vc0 $end
$var wire 1 I pop_delay_vc1 $end
$var wire 6 f" data_mux_1 [5:0] $end
$var wire 6 g" data_mux_0 [5:0] $end
$var wire 1 @ clk $end
$var reg 6 h" data_demux_d [5:0] $end
$var reg 6 i" reg_VC0 [5:0] $end
$var reg 6 j" reg_VC1 [5:0] $end
$upscope $end
$scope module of $end
$var wire 1 X fifo_pause_d0 $end
$var wire 1 W fifo_pause_d1 $end
$var wire 1 ^ fifo_empty_vc1 $end
$var wire 1 _ fifo_empty_vc0 $end
$var reg 1 S pop_b0 $end
$var reg 1 R pop_b1 $end
$var reg 1 P pop_vc0 $end
$var reg 1 O pop_vc1 $end
$upscope $end
$scope module vc0 $end
$var wire 4 k" aeVC_o [3:0] $end
$var wire 4 l" afVC_o [3:0] $end
$var wire 6 m" data_vc0 [5:0] $end
$var wire 1 P pop_vc0 $end
$var wire 1 L push_vc0 $end
$var wire 1 3 reset_L $end
$var wire 6 n" data_out [5:0] $end
$var wire 1 @ clk $end
$var reg 1 o" almost_empty $end
$var reg 1 p" almost_full $end
$var reg 6 q" data_count [5:0] $end
$var reg 6 r" data_mux_0 [5:0] $end
$var reg 1 s" datamod $end
$var reg 1 _ fifo_empty_vc0 $end
$var reg 1 Z fifo_error_vc0 $end
$var reg 1 t" fifo_full $end
$var reg 1 V fifo_pause_vc0 $end
$var reg 4 u" rd_ptr [3:0] $end
$var reg 4 v" wr_ptr [3:0] $end
$scope module mem_vc0 $end
$var wire 6 w" data_in [5:0] $end
$var wire 4 x" rd_ptr [3:0] $end
$var wire 1 P read $end
$var wire 4 y" wr_ptr [3:0] $end
$var wire 1 L write $end
$var wire 1 3 reset_L $end
$var wire 1 @ clk $end
$var reg 6 z" data_out [5:0] $end
$upscope $end
$upscope $end
$scope module vc1 $end
$var wire 4 {" aeVC_o [3:0] $end
$var wire 4 |" afVC_o [3:0] $end
$var wire 6 }" data_vc1 [5:0] $end
$var wire 1 O pop_vc1 $end
$var wire 1 K push_vc1 $end
$var wire 1 3 reset_L $end
$var wire 6 ~" data_out [5:0] $end
$var wire 1 @ clk $end
$var reg 1 !# almost_empty $end
$var reg 1 "# almost_full $end
$var reg 6 ## data_count [5:0] $end
$var reg 6 $# data_mux_1 [5:0] $end
$var reg 1 %# datamod $end
$var reg 1 ^ fifo_empty_vc1 $end
$var reg 1 Y fifo_error_vc1 $end
$var reg 1 &# fifo_full $end
$var reg 1 U fifo_pause_vc1 $end
$var reg 4 '# rd_ptr [3:0] $end
$var reg 4 (# wr_ptr [3:0] $end
$scope module mem_vc1 $end
$var wire 6 )# data_in [5:0] $end
$var wire 4 *# rd_ptr [3:0] $end
$var wire 1 O read $end
$var wire 4 +# wr_ptr [3:0] $end
$var wire 1 K write $end
$var wire 1 3 reset_L $end
$var wire 1 @ clk $end
$var reg 6 ,# data_out [5:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module probador $end
$var wire 1 G active_out_cond $end
$var wire 6 -# data_out_0_cond [5:0] $end
$var wire 6 .# data_out_1_cond [5:0] $end
$var wire 5 /# error_out_cond [4:0] $end
$var wire 1 ; fifo_empty_d0 $end
$var wire 1 : fifo_empty_d1 $end
$var wire 1 9 fifo_pause_main $end
$var wire 1 8 idle_out_cond $end
$var reg 2 0# aeDF_i [1:0] $end
$var reg 2 1# aeMF_i [1:0] $end
$var reg 4 2# aeVC_i [3:0] $end
$var reg 2 3# afDF_i [1:0] $end
$var reg 2 4# afMF_i [1:0] $end
$var reg 4 5# afVC_i [3:0] $end
$var reg 1 @ clk $end
$var reg 6 6# data_in [5:0] $end
$var reg 1 7 init $end
$var reg 1 6 pop_d0 $end
$var reg 1 5 pop_d1 $end
$var reg 1 4 push_main $end
$var reg 1 3 reset_L $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b101100 6#
b1110 5#
b11 4#
b11 3#
b10 2#
b1 1#
b1 0#
b0 /#
bx .#
bx -#
bx ,#
bx +#
bx *#
b0 )#
bx (#
bx '#
0&#
0%#
bx $#
bx ##
0"#
0!#
bx ~"
b0 }"
bx |"
bx {"
bx z"
bx y"
bx x"
b0 w"
bx v"
bx u"
0t"
0s"
bx r"
bx q"
0p"
0o"
bx n"
b0 m"
bx l"
bx k"
b0 j"
b0 i"
bx h"
bx g"
bx f"
bx e"
b101100 d"
bx c"
bx b"
bx a"
bx `"
0_"
0^"
bx ]"
0\"
0["
bx Z"
b101100 Y"
bx X"
bx W"
b1 V"
bx U"
b0 T"
bx S"
bx R"
bx Q"
bx P"
bx O"
bx N"
bx M"
b1 L"
b1 K"
b10 J"
b11 I"
b11 H"
b1110 G"
b0 F"
b0 E"
xD"
b0 C"
b0 B"
bx A"
x@"
bx ?"
bx >"
bx ="
bx <"
bx ;"
bx :"
bx 9"
bx 8"
bx 7"
06"
05"
bx 4"
bx 3"
02"
01"
bx 0"
bx /"
bx ."
bx -"
bx ,"
bx +"
bx *"
bx )"
bx ("
bx '"
0&"
0%"
bx $"
bx #"
0""
0!"
bx ~
bx }
bx |
bx {
b0 z
b0 y
b1 x
bx w
b1 v
bx u
b10 t
bx s
b11 r
bx q
b11 p
bx o
b1110 n
bx m
bx l
bx k
bx j
bx i
b101100 h
bx g
bx f
bx e
bx d
b0 c
b0 b
b0 a
1`
1_
1^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
xN
xM
0L
0K
0J
zI
zH
0G
b1 F
b1 E
b10 D
b11 C
b11 B
b1110 A
0@
b101100 ?
bx >
bx =
b0 <
1;
1:
09
08
07
06
05
04
03
z2
z1
x0
z/
z.
x-
z,
z+
x*
z)
z(
z'
z&
x%
z$
z#
z"
z!
$end
#2000
b10 V"
b0 j"
0@"
0M
1N
b0 k
b0 ."
b0 ;"
b0 ?"
b0 l
b0 |
b0 +"
b0 >"
1;
b11111 y
b11111 E"
1:
1`
1_
1^
b0 S"
b10 w
b10 ~
b10 0"
b10 M"
b10 q
b10 }
b10 /"
b10 P"
b11 s
b11 O"
b11 k"
b11 {"
b1010 m
b1010 R"
b1010 l"
b1010 |"
b10 u
b10 N"
b10 W"
b10 o
b10 Q"
b10 X"
b1 U"
b0 `"
b0 b"
b0 a"
b0 c"
b0 ]"
b0 u"
b0 x"
b0 v"
b0 y"
b0 g
b0 g"
b0 r"
b0 q"
b0 '#
b0 *#
b0 (#
b0 +#
b0 f
b0 f"
b0 $#
b0 ##
b0 j
b0 ="
b0 h"
b0 '"
b0 )"
b0 ("
b0 *"
b0 >
b0 e
b0 $"
b0 -#
b0 #"
b0 7"
b0 9"
b0 8"
b0 :"
b0 =
b0 d
b0 4"
b0 .#
b0 3"
13
1@
#4000
0@
#6000
b10111 y
b10111 E"
1!"
0;
b0 {
b0 ,"
b100 V"
b1 #"
b1 ("
b1 *"
b10 U"
1@
#8000
0@
#10000
b10111 y
b10111 E"
1:
1_
1^
1`
18
b1000 V"
0!"
b1 w
b1 ~
b1 0"
b1 M"
b11 q
b11 }
b11 /"
b11 P"
b10 s
b10 O"
b10 k"
b10 {"
b1110 m
b1110 R"
b1110 l"
b1110 |"
b1 u
b1 N"
b1 W"
b11 o
b11 Q"
b11 X"
b100 U"
b10 #"
b10 ("
b10 *"
1@
#12000
0@
#14000
b10111 y
b10111 E"
1`
1X
1""
1G
b1000 V"
08
14
b101101 ?
b101101 h
b101101 Y"
b101101 d"
b101101 6#
b11 #"
b11 ("
b11 *"
b1000 U"
1@
#16000
0@
#18000
1^
b1000 <
b1000 a
b1000 T"
b1000 /#
b1000 S"
b10000 V"
0G
1K
b101101 b
b101101 C"
b101101 }"
b101101 )#
1D"
1J
1T
1Q
b1000 z
b1000 F"
b10110 y
b10110 E"
b101101 i
b101101 A"
b101101 Z"
b101101 e"
1["
0`
1]
1&"
1X
1""
b1 ]"
b1 a"
b1 c"
b100 #"
b0 ("
b0 *"
b101110 ?
b101110 h
b101110 Y"
b101110 d"
b101110 6#
1@
#20000
0@
#22000
b1000 z
b1000 F"
b10010 y
b10010 E"
1K
b101110 b
b101110 C"
b101110 }"
b101110 )#
1!#
0^
b101101 ~"
b101101 ,#
b101110 i
b101110 A"
b101110 Z"
b101110 e"
b10000 V"
b1000 <
b1000 a
b1000 T"
b1000 /#
b101111 ?
b101111 h
b101111 Y"
b101111 d"
b101111 6#
b1 ##
b1 (#
b1 +#
b1 `"
b1 b"
b10 a"
b10 c"
b10000 U"
1@
#24000
0@
#26000
1K
b101111 b
b101111 C"
b101111 }"
b101111 )#
b101111 i
b101111 A"
b101111 Z"
b101111 e"
1!#
b10 `"
b10 b"
b11 a"
b11 c"
b10 ##
b10 (#
b10 +#
b110000 ?
b110000 h
b110000 Y"
b110000 d"
b110000 6#
1@
#28000
0@
#30000
1K
b110000 b
b110000 C"
b110000 }"
b110000 )#
0!#
b110000 i
b110000 A"
b110000 Z"
b110000 e"
b110001 ?
b110001 h
b110001 Y"
b110001 d"
b110001 6#
b11 ##
b11 (#
b11 +#
b11 `"
b11 b"
b0 a"
b0 c"
1@
#32000
0@
#34000
1K
b110001 b
b110001 C"
b110001 }"
b110001 )#
b110001 i
b110001 A"
b110001 Z"
b110001 e"
b0 `"
b0 b"
b1 a"
b1 c"
b100 ##
b100 (#
b100 +#
b110010 ?
b110010 h
b110010 Y"
b110010 d"
b110010 6#
1@
#36000
0@
#38000
1K
b110010 b
b110010 C"
b110010 }"
b110010 )#
b110010 i
b110010 A"
b110010 Z"
b110010 e"
b110011 ?
b110011 h
b110011 Y"
b110011 d"
b110011 6#
b101 ##
b101 (#
b101 +#
b1 `"
b1 b"
b10 a"
b10 c"
1@
#40000
0@
#42000
1K
b110011 b
b110011 C"
b110011 }"
b110011 )#
b110011 i
b110011 A"
b110011 Z"
b110011 e"
b10 `"
b10 b"
b11 a"
b11 c"
b110 ##
b110 (#
b110 +#
b110100 ?
b110100 h
b110100 Y"
b110100 d"
b110100 6#
1@
#44000
0@
#46000
1K
b110100 b
b110100 C"
b110100 }"
b110100 )#
b110100 i
b110100 A"
b110100 Z"
b110100 e"
b110101 ?
b110101 h
b110101 Y"
b110101 d"
b110101 6#
b111 ##
b111 (#
b111 +#
b11 `"
b11 b"
b0 a"
b0 c"
1@
#48000
0@
#50000
1K
b110101 b
b110101 C"
b110101 }"
b110101 )#
b110101 i
b110101 A"
b110101 Z"
b110101 e"
b0 `"
b0 b"
b1 a"
b1 c"
b1000 ##
b1000 (#
b1000 +#
b110110 ?
b110110 h
b110110 Y"
b110110 d"
b110110 6#
1@
#52000
0@
#54000
1K
b110110 b
b110110 C"
b110110 }"
b110110 )#
b110110 i
b110110 A"
b110110 Z"
b110110 e"
b110111 ?
b110111 h
b110111 Y"
b110111 d"
b110111 6#
b1001 ##
b1001 (#
b1001 +#
b1 `"
b1 b"
b10 a"
b10 c"
1@
#56000
0@
#58000
1K
b110111 b
b110111 C"
b110111 }"
b110111 )#
b110111 i
b110111 A"
b110111 Z"
b110111 e"
b10 `"
b10 b"
b11 a"
b11 c"
b1010 ##
b1010 (#
b1010 +#
b111000 ?
b111000 h
b111000 Y"
b111000 d"
b111000 6#
1@
#60000
0@
#62000
1K
b111000 b
b111000 C"
b111000 }"
b111000 )#
b111000 i
b111000 A"
b111000 Z"
b111000 e"
b111001 ?
b111001 h
b111001 Y"
b111001 d"
b111001 6#
b1011 ##
b1011 (#
b1011 +#
b11 `"
b11 b"
b0 a"
b0 c"
1@
#64000
0@
#66000
1K
b111001 b
b111001 C"
b111001 }"
b111001 )#
b111001 i
b111001 A"
b111001 Z"
b111001 e"
b0 `"
b0 b"
b1 a"
b1 c"
b1100 ##
b1100 (#
b1100 +#
b111010 ?
b111010 h
b111010 Y"
b111010 d"
b111010 6#
1@
#68000
0@
#70000
1K
b111010 b
b111010 C"
b111010 }"
b111010 )#
b111010 i
b111010 A"
b111010 Z"
b111010 e"
b111011 ?
b111011 h
b111011 Y"
b111011 d"
b111011 6#
b1101 ##
b1101 (#
b1101 +#
b1 `"
b1 b"
b10 a"
b10 c"
1@
#72000
0@
#74000
1["
0K
b0 b
b0 C"
b0 }"
b0 )#
0J
0T
0Q
b111011 i
b111011 A"
b111011 Z"
b111011 e"
1U
1"#
b10 `"
b10 b"
b11 a"
b11 c"
b1110 ##
b1110 (#
b1110 +#
b111100 ?
b111100 h
b111100 Y"
b111100 d"
b111100 6#
1@
#76000
0@
#78000
0["
b111101 ?
b111101 h
b111101 Y"
b111101 d"
b111101 6#
b10 ]"
b0 a"
b0 c"
1@
#80000
0@
#82000
19
1\"
b11 ]"
b1 a"
b1 c"
b111110 ?
b111110 h
b111110 Y"
b111110 d"
b111110 6#
1@
#84000
0@
#86000
b10000 V"
b1000 <
b1000 a
b1000 T"
b1000 /#
b1001 z
b1001 F"
b10010 y
b10010 E"
1[
1_"
19
1\"
b1100 ?
b1100 h
b1100 Y"
b1100 d"
b1100 6#
b100 ]"
b10 a"
b10 c"
1@
#88000
0@
#90000
b10000 V"
b1000 <
b1000 a
b1000 T"
b1000 /#
0D"
b1000 z
b1000 F"
b10010 y
b10010 E"
b1100 i
b1100 A"
b1100 Z"
b1100 e"
19
0[
1\"
1_"
04
1@
#92000
0@
#94000
1@
#96000
0@
#98000
1@
#100000
0@
#102000
1@
#104000
0@
#106000
1@
#108000
0@
#110000
1@
#112000
0@
#114000
1@
#116000
0@
#118000
1@
#120000
0@
#122000
1@
#124000
0@
#126000
1@
#128000
0@
#130000
1@
#132000
0@
#134000
1@
#136000
0@
#138000
1@
#140000
0@
#142000
1@
#144000
0@
#146000
1@
#148000
0@
#150000
1@
#152000
0@
#154000
1@
#156000
0@
#158000
1@
